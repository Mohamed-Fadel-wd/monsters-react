{"version":3,"sources":["components/Card/Card.component.jsx","components/card-list/CardList.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAGaA,G,kBAAO,SAACC,GACnB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,6BAEL,6BAAKL,EAAMI,QAAQE,OALrB,IAKgC,6BAAKN,EAAMI,QAAQG,QALnD,SCDSC,EAAW,SAACR,GACvB,OAAO,qBAAKC,UAAU,YAAf,SACJD,EAAMS,SAASC,KAAI,SAACN,GAAD,OAClB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCJZM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACvB,uBAAOZ,UAAU,SAASa,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MC2C/DG,E,kDAzCb,aAAe,IAAD,8BACZ,gBAeAH,aAAe,SAACI,GACd,EAAKC,SAAU,CAACC,YAAaF,EAAEG,OAAOC,SAfxC,EAAKC,MAAO,CACVb,SAAU,GACVU,YAAc,IAJJ,E,gEASM,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,SAASkB,S,+BAQ9B,IAAD,EACwBC,KAAKN,MAA9Bb,EADC,EACDA,SAAUU,EADT,EACSA,YACXU,EAAmBpB,EAASqB,QAAO,SAAA1B,GAAO,OAC9CA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBAGlD,OAEA,sBAAK9B,UAAU,MAAf,UACD,iDACC,cAAC,EAAD,CACAW,YAAa,mBACbC,aAAce,KAAKf,eAEnB,cAAC,EAAD,CAAUJ,SAAUoB,W,GAnCNI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1ac4fc62.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Card.styles.css\";\r\n\r\nexport const Card = (props) => {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img\r\n        alt=\"monster\"\r\n        src={`https://robohash.org/${props.monster.id}1?set=set2&size=180x180`}\r\n      />\r\n      <h3>{props.monster.name}</h3>;<h4>{props.monster.email}</h4>;\r\n    </div>\r\n  );\r\n};","import React from \"react\";\r\nimport \"./CardList.styles.css\";\r\nimport { Card } from \"../Card/Card.component\";\r\n\r\nexport const CardList = (props) => {\r\n  return <div className=\"card-list\">\r\n    {props.monsters.map((monster) => (\r\n      <Card key={monster.id} monster={monster} />\r\n    ))}\r\n  </div>\r\n};\r\n","import React from \"react\";\r\nimport \"./search-box.styles.css\";\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n  <input className=\"search\" type=\"search\" placeholder={placeholder} onChange={handleChange} />\r\n);\r\n","\r\nimport './App.css';\r\nimport React, {Component} from \"react\"\r\nimport { CardList } from './components/card-list/CardList.component'\r\nimport { SearchBox } from \"./components/search-box/search-box.component\"\r\nclass App extends Component {\r\n  constructor (){\r\n    super(); \r\n    this.state= {\r\n      monsters :[], \r\n      searchField : '',\r\n    }\r\n\r\n   \r\n  }\r\n  componentDidMount(){\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n    .then(response =>response.json())\r\n    .then(users => this.setState({monsters:users}));\r\n  }\r\n\r\n\r\n    handleChange = (e) => {\r\n      this.setState ({searchField: e.target.value})\r\n    }\r\n\r\n  render () {\r\n    const {monsters, searchField} = this.state;\r\n    const filteredMonsters = monsters.filter(monster =>\r\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\r\n      )\r\n\r\n    return (\r\n    \r\n    <div className=\"App\">\r\n   <h1>Monster Roledex</h1>\r\n    <SearchBox\r\n    placeholder={\"Search Monsters \"}\r\n    handleChange={this.handleChange}\r\n     />\r\n    <CardList monsters={filteredMonsters} /> \r\n    </div>\r\n  );\r\n  }\r\n  \r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}